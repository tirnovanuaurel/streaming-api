datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Competition {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  tables    Table[]
  updatedAt DateTime @updatedAt
}

model Team {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  logo      String
  name      String   @unique
  tables    Table[]
  updatedAt DateTime @updatedAt
}

model Live {
  awayGoals     Json?
  awayScore     Int      @default(0)
  awayTeam      String
  awayTeamBadge String?
  createdAt     DateTime @default(now())
  homeGoals     Json?
  homeScore     Int      @default(0)
  homeTeam      String
  homeTeamBadge String?
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt     DateTime @updatedAt
}

model Table {
  competition     Competition? @relation(fields: [competitionId], references: [id])
  competitionId   String?      @db.ObjectId
  createdAt       DateTime     @default(now())
  drawn           Int          @default(0)
  goalsConceded   Int          @default(0)
  goalsDifference Int          @default(0)
  goalsScored     Int          @default(0)
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  lost            Int          @default(0)
  played          Int          @default(0)
  points          Int          @default(0)
  team            Team         @relation(fields: [teamId], references: [id])
  teamId          String       @db.ObjectId
  updatedAt       DateTime     @updatedAt
  won             Int          @default(0)
}

model Setting {
  channelLogo String?
  channelName String
  createdAt   DateTime @default(now())
  facebook    String?
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  instagram   String?
  twiiter     String?
  updatedAt   DateTime @updatedAt
}

model ChannelNew {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  updatedAt DateTime @updatedAt
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}
