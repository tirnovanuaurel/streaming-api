/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AppSetting } from "@prisma/client";

export class AppSettingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AppSettingCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingCountArgs>
  ): Promise<number> {
    return this.prisma.appSetting.count(args);
  }

  async appSettings<T extends Prisma.AppSettingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingFindManyArgs>
  ): Promise<AppSetting[]> {
    return this.prisma.appSetting.findMany(args);
  }
  async appSetting<T extends Prisma.AppSettingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingFindUniqueArgs>
  ): Promise<AppSetting | null> {
    return this.prisma.appSetting.findUnique(args);
  }
  async createAppSetting<T extends Prisma.AppSettingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingCreateArgs>
  ): Promise<AppSetting> {
    return this.prisma.appSetting.create<T>(args);
  }
  async updateAppSetting<T extends Prisma.AppSettingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingUpdateArgs>
  ): Promise<AppSetting> {
    return this.prisma.appSetting.update<T>(args);
  }
  async deleteAppSetting<T extends Prisma.AppSettingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppSettingDeleteArgs>
  ): Promise<AppSetting> {
    return this.prisma.appSetting.delete(args);
  }
}
